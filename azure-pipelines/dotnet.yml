parameters:
  RunTests:

steps:

- task: VSBuild@1
  displayName: üõ† Build
  inputs:
    msbuildArgs: /t:build,pack /m /v:m /bl:"$(Build.ArtifactStagingDirectory)/build_logs/msbuild.binlog"
    platform: Any CPU
    configuration: $(BuildConfiguration)

- powershell: .\build.ps1 -Test
  displayName: üß™ Test
  failOnStderr: true
  condition: and(succeeded(), ${{ parameters.RunTests }})

- ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
  - pwsh: >
      dotnet tool install --tool-path obj SignClient

      obj/SignClient sign
      --baseDirectory '$(System.DefaultWorkingDirectory)/bin/$(BuildConfiguration)/Packages'
      --input '**/*'
      --config '$(System.DefaultWorkingDirectory)/azure-pipelines/SignClient.json'
      --filelist '$(System.DefaultWorkingDirectory)/azure-pipelines/signfiles.txt'
      --user '$(codesign_username)'
      --secret '$(codesign_secret)'
      --name 'PInvoke'
      --descriptionUrl 'https://github.com/dotnet/pinvoke'
    displayName: üñäÔ∏è Code sign

- powershell: azure-pipelines/variables/_pipelines.ps1
  failOnStderr: true
  displayName: ‚öô Update pipeline variables based on build outputs
  condition: succeededOrFailed()

- powershell: azure-pipelines/artifacts/_pipelines.ps1 -ArtifactNameSuffix "-$(Agent.JobName)" -Verbose
  failOnStderr: true
  displayName: üì¢ Publish artifacts
  condition: succeededOrFailed()

- ${{ if and(ne(variables['codecov_token'], ''), parameters.RunTests) }}:
  - powershell: |
      $ArtifactStagingFolder = & "azure-pipelines/Get-ArtifactsStagingDirectory.ps1"
      $CoverageResultsFolder = Join-Path $ArtifactStagingFolder "coverageResults-$(Agent.JobName)"
      azure-pipelines/publish-CodeCov.ps1 -CodeCovToken "$(codecov_token)" -PathToCodeCoverage "$CoverageResultsFolder" -Name "$(Agent.JobName) Coverage Results" -Flags "$(Agent.JobName)Host,$(BuildConfiguration)"
    displayName: üì¢ Publish code coverage results to codecov.io
    timeoutInMinutes: 3
    continueOnError: true
