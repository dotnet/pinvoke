PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_3STATE = PInvoke.User32.ButtonWindowStyles.BS_DEFPUSHBUTTON | PInvoke.User32.ButtonWindowStyles.BS_RADIOBUTTON -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_AUTO3STATE = PInvoke.User32.ButtonWindowStyles.BS_CHECKBOX | PInvoke.User32.ButtonWindowStyles.BS_RADIOBUTTON -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_AUTOCHECKBOX = PInvoke.User32.ButtonWindowStyles.BS_DEFPUSHBUTTON | PInvoke.User32.ButtonWindowStyles.BS_CHECKBOX -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_AUTORADIOBUTTON = PInvoke.User32.ButtonWindowStyles.BS_DEFPUSHBUTTON | PInvoke.User32.ButtonWindowStyles.BS_USERBUTTON -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_BITMAP = 128 -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_BOTTOM = 2048 -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_CENTER = PInvoke.User32.ButtonWindowStyles.BS_LEFT | PInvoke.User32.ButtonWindowStyles.BS_RIGHT -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_CHECKBOX = 2 -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_COMMANDLINK = PInvoke.User32.ButtonWindowStyles.BS_CHECKBOX | PInvoke.User32.ButtonWindowStyles.BS_SPLITBUTTON -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_DEFCOMMANDLINK = PInvoke.User32.ButtonWindowStyles.BS_DEFPUSHBUTTON | PInvoke.User32.ButtonWindowStyles.BS_COMMANDLINK -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_DEFPUSHBUTTON = 1 -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_DEFSPLITBUTTON = PInvoke.User32.ButtonWindowStyles.BS_DEFPUSHBUTTON | PInvoke.User32.ButtonWindowStyles.BS_SPLITBUTTON -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_FLAT = 32768 -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_GROUPBOX = PInvoke.User32.ButtonWindowStyles.BS_DEFPUSHBUTTON | PInvoke.User32.ButtonWindowStyles.BS_AUTO3STATE -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_ICON = 64 -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_LEFT = 256 -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_LEFTTEXT = 32 -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_MULTILINE = 8192 -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_NOTIFY = 16384 -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_OWNERDRAW = PInvoke.User32.ButtonWindowStyles.BS_DEFPUSHBUTTON | PInvoke.User32.ButtonWindowStyles.BS_PUSHBOX -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_PUSHBOX = PInvoke.User32.ButtonWindowStyles.BS_CHECKBOX | PInvoke.User32.ButtonWindowStyles.BS_USERBUTTON -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_PUSHBUTTON = 0 -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_PUSHLIKE = 4096 -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_RADIOBUTTON = 4 -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_RIGHT = 512 -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_RIGHTBUTTON = 32 -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_SPLITBUTTON = PInvoke.User32.ButtonWindowStyles.BS_RADIOBUTTON | PInvoke.User32.ButtonWindowStyles.BS_USERBUTTON -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_TEXT = 0 -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_TOP = 1024 -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_TYPEMASK = PInvoke.User32.ButtonWindowStyles.BS_DEFPUSHBUTTON | PInvoke.User32.ButtonWindowStyles.BS_COMMANDLINK -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_USERBUTTON = 8 -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.ButtonWindowStyles.BS_VCENTER = PInvoke.User32.ButtonWindowStyles.BS_TOP | PInvoke.User32.ButtonWindowStyles.BS_BOTTOM -> PInvoke.User32.ButtonWindowStyles
PInvoke.User32.CHANGEFILTERSTRUCT
PInvoke.User32.CHANGEFILTERSTRUCT.CHANGEFILTERSTRUCT() -> void
PInvoke.User32.CHANGEFILTERSTRUCT.ExtStatus -> uint
PInvoke.User32.CHANGEFILTERSTRUCT.cbSize -> uint
PInvoke.User32.CWPRETSTRUCT
PInvoke.User32.CWPRETSTRUCT.CWPRETSTRUCT() -> void
PInvoke.User32.CWPRETSTRUCT.hwnd -> System.IntPtr
PInvoke.User32.CWPRETSTRUCT.lParam -> System.IntPtr
PInvoke.User32.CWPRETSTRUCT.lResult -> System.IntPtr
PInvoke.User32.CWPRETSTRUCT.message -> PInvoke.User32.WindowMessage
PInvoke.User32.CWPRETSTRUCT.wParam -> System.IntPtr
PInvoke.User32.CWPSTRUCT
PInvoke.User32.CWPSTRUCT.CWPSTRUCT() -> void
PInvoke.User32.CWPSTRUCT.hwnd -> System.IntPtr
PInvoke.User32.CWPSTRUCT.lParam -> System.IntPtr
PInvoke.User32.CWPSTRUCT.message -> PInvoke.User32.WindowMessage
PInvoke.User32.CWPSTRUCT.wParam -> System.IntPtr
PInvoke.User32.ComboBoxWindowStyles
PInvoke.User32.ComboBoxWindowStyles.CBS_AUTOHSCROLL = 64 -> PInvoke.User32.ComboBoxWindowStyles
PInvoke.User32.ComboBoxWindowStyles.CBS_DISABLENOSCROLL = 2048 -> PInvoke.User32.ComboBoxWindowStyles
PInvoke.User32.ComboBoxWindowStyles.CBS_DROPDOWN = 2 -> PInvoke.User32.ComboBoxWindowStyles
PInvoke.User32.ComboBoxWindowStyles.CBS_DROPDOWNLIST = PInvoke.User32.ComboBoxWindowStyles.CBS_SIMPLE | PInvoke.User32.ComboBoxWindowStyles.CBS_DROPDOWN -> PInvoke.User32.ComboBoxWindowStyles
PInvoke.User32.ComboBoxWindowStyles.CBS_HASSTRINGS = 512 -> PInvoke.User32.ComboBoxWindowStyles
PInvoke.User32.ComboBoxWindowStyles.CBS_LOWERCASE = 16384 -> PInvoke.User32.ComboBoxWindowStyles
PInvoke.User32.ComboBoxWindowStyles.CBS_NOINTEGRALHEIGHT = 1024 -> PInvoke.User32.ComboBoxWindowStyles
PInvoke.User32.ComboBoxWindowStyles.CBS_OEMCONVERT = 128 -> PInvoke.User32.ComboBoxWindowStyles
PInvoke.User32.ComboBoxWindowStyles.CBS_OWNERDRAWFIXED = 16 -> PInvoke.User32.ComboBoxWindowStyles
PInvoke.User32.ComboBoxWindowStyles.CBS_OWNERDRAWVARIABLE = 32 -> PInvoke.User32.ComboBoxWindowStyles
PInvoke.User32.ComboBoxWindowStyles.CBS_SIMPLE = 1 -> PInvoke.User32.ComboBoxWindowStyles
PInvoke.User32.ComboBoxWindowStyles.CBS_SORT = 256 -> PInvoke.User32.ComboBoxWindowStyles
PInvoke.User32.ComboBoxWindowStyles.CBS_UPPERCASE = 8192 -> PInvoke.User32.ComboBoxWindowStyles
PInvoke.User32.DialogWindowStyles
PInvoke.User32.DialogWindowStyles.DS_3DLOOK = 4 -> PInvoke.User32.DialogWindowStyles
PInvoke.User32.DialogWindowStyles.DS_ABSALIGN = 1 -> PInvoke.User32.DialogWindowStyles
PInvoke.User32.DialogWindowStyles.DS_CENTER = 2048 -> PInvoke.User32.DialogWindowStyles
PInvoke.User32.DialogWindowStyles.DS_CENTERMOUSE = 4096 -> PInvoke.User32.DialogWindowStyles
PInvoke.User32.DialogWindowStyles.DS_CONTEXTHELP = 8192 -> PInvoke.User32.DialogWindowStyles
PInvoke.User32.DialogWindowStyles.DS_CONTROL = 1024 -> PInvoke.User32.DialogWindowStyles
PInvoke.User32.DialogWindowStyles.DS_FIXEDSYS = 8 -> PInvoke.User32.DialogWindowStyles
PInvoke.User32.DialogWindowStyles.DS_LOCALEDIT = 32 -> PInvoke.User32.DialogWindowStyles
PInvoke.User32.DialogWindowStyles.DS_MODALFRAME = 128 -> PInvoke.User32.DialogWindowStyles
PInvoke.User32.DialogWindowStyles.DS_NOFAILCREATE = 16 -> PInvoke.User32.DialogWindowStyles
PInvoke.User32.DialogWindowStyles.DS_NOIDLEMSG = 256 -> PInvoke.User32.DialogWindowStyles
PInvoke.User32.DialogWindowStyles.DS_SETFONT = 64 -> PInvoke.User32.DialogWindowStyles
PInvoke.User32.DialogWindowStyles.DS_SETFOREGROUND = 512 -> PInvoke.User32.DialogWindowStyles
PInvoke.User32.DialogWindowStyles.DS_SHELLFONT = PInvoke.User32.DialogWindowStyles.DS_FIXEDSYS | PInvoke.User32.DialogWindowStyles.DS_SETFONT -> PInvoke.User32.DialogWindowStyles
PInvoke.User32.DialogWindowStyles.DS_SYSMODAL = 2 -> PInvoke.User32.DialogWindowStyles
PInvoke.User32.DialogWindowStyles.DS_USEPIXELS = 32768 -> PInvoke.User32.DialogWindowStyles
PInvoke.User32.EditControlWindowStyles
PInvoke.User32.EditControlWindowStyles.ES_AUTOHSCROLL = 128 -> PInvoke.User32.EditControlWindowStyles
PInvoke.User32.EditControlWindowStyles.ES_AUTOVSCROLL = 64 -> PInvoke.User32.EditControlWindowStyles
PInvoke.User32.EditControlWindowStyles.ES_CENTER = 1 -> PInvoke.User32.EditControlWindowStyles
PInvoke.User32.EditControlWindowStyles.ES_LEFT = 0 -> PInvoke.User32.EditControlWindowStyles
PInvoke.User32.EditControlWindowStyles.ES_LOWERCASE = 16 -> PInvoke.User32.EditControlWindowStyles
PInvoke.User32.EditControlWindowStyles.ES_MULTILINE = 4 -> PInvoke.User32.EditControlWindowStyles
PInvoke.User32.EditControlWindowStyles.ES_NOHIDESEL = 256 -> PInvoke.User32.EditControlWindowStyles
PInvoke.User32.EditControlWindowStyles.ES_NUMBER = 8192 -> PInvoke.User32.EditControlWindowStyles
PInvoke.User32.EditControlWindowStyles.ES_OEMCONVERT = 1024 -> PInvoke.User32.EditControlWindowStyles
PInvoke.User32.EditControlWindowStyles.ES_PASSWORD = 32 -> PInvoke.User32.EditControlWindowStyles
PInvoke.User32.EditControlWindowStyles.ES_READONLY = 2048 -> PInvoke.User32.EditControlWindowStyles
PInvoke.User32.EditControlWindowStyles.ES_RIGHT = 2 -> PInvoke.User32.EditControlWindowStyles
PInvoke.User32.EditControlWindowStyles.ES_UPPERCASE = 8 -> PInvoke.User32.EditControlWindowStyles
PInvoke.User32.EditControlWindowStyles.ES_WANTRETURN = 4096 -> PInvoke.User32.EditControlWindowStyles
PInvoke.User32.EnumDisplayDevicesFlags
PInvoke.User32.EnumDisplayDevicesFlags.EDD_GET_DEVICE_INTERFACE_NAME = 1 -> PInvoke.User32.EnumDisplayDevicesFlags
PInvoke.User32.EnumDisplaySettingsExFlags
PInvoke.User32.EnumDisplaySettingsExFlags.EDS_RAWMODE = 2 -> PInvoke.User32.EnumDisplaySettingsExFlags
PInvoke.User32.EnumDisplaySettingsExFlags.EDS_ROTATEDMODE = 4 -> PInvoke.User32.EnumDisplaySettingsExFlags
PInvoke.User32.ICONINFO
PInvoke.User32.ICONINFO.ICONINFO() -> void
PInvoke.User32.ICONINFO.fIcon -> bool
PInvoke.User32.ICONINFO.xHotspot -> int
PInvoke.User32.ICONINFO.yHotspot -> int
PInvoke.User32.ICONINFO.hbmMask -> System.IntPtr
PInvoke.User32.ICONINFO.hbmColor -> System.IntPtr
PInvoke.User32.LASTINPUTINFO
PInvoke.User32.LASTINPUTINFO.LASTINPUTINFO() -> void
PInvoke.User32.LASTINPUTINFO.cbSize -> int
PInvoke.User32.LASTINPUTINFO.dwTime -> uint
PInvoke.User32.ListBoxWindowStyles
PInvoke.User32.ListBoxWindowStyles.LBS_COMBOBOX = 32768 -> PInvoke.User32.ListBoxWindowStyles
PInvoke.User32.ListBoxWindowStyles.LBS_DISABLENOSCROLL = 4096 -> PInvoke.User32.ListBoxWindowStyles
PInvoke.User32.ListBoxWindowStyles.LBS_EXTENDEDSEL = 2048 -> PInvoke.User32.ListBoxWindowStyles
PInvoke.User32.ListBoxWindowStyles.LBS_HASSTRINGS = 64 -> PInvoke.User32.ListBoxWindowStyles
PInvoke.User32.ListBoxWindowStyles.LBS_MULTICOLUMN = 512 -> PInvoke.User32.ListBoxWindowStyles
PInvoke.User32.ListBoxWindowStyles.LBS_MULTIPLESEL = 8 -> PInvoke.User32.ListBoxWindowStyles
PInvoke.User32.ListBoxWindowStyles.LBS_NODATA = 8192 -> PInvoke.User32.ListBoxWindowStyles
PInvoke.User32.ListBoxWindowStyles.LBS_NOINTEGRALHEIGHT = 256 -> PInvoke.User32.ListBoxWindowStyles
PInvoke.User32.ListBoxWindowStyles.LBS_NOREDRAW = 4 -> PInvoke.User32.ListBoxWindowStyles
PInvoke.User32.ListBoxWindowStyles.LBS_NOSEL = 16384 -> PInvoke.User32.ListBoxWindowStyles
PInvoke.User32.ListBoxWindowStyles.LBS_NOTIFY = 1 -> PInvoke.User32.ListBoxWindowStyles
PInvoke.User32.ListBoxWindowStyles.LBS_OWNERDRAWFIXED = 16 -> PInvoke.User32.ListBoxWindowStyles
PInvoke.User32.ListBoxWindowStyles.LBS_OWNERDRAWVARIABLE = 32 -> PInvoke.User32.ListBoxWindowStyles
PInvoke.User32.ListBoxWindowStyles.LBS_SORT = 2 -> PInvoke.User32.ListBoxWindowStyles
PInvoke.User32.ListBoxWindowStyles.LBS_STANDARD = 10485763 -> PInvoke.User32.ListBoxWindowStyles
PInvoke.User32.ListBoxWindowStyles.LBS_USETABSTOPS = 128 -> PInvoke.User32.ListBoxWindowStyles
PInvoke.User32.ListBoxWindowStyles.LBS_WANTKEYBOARDINPUT = 1024 -> PInvoke.User32.ListBoxWindowStyles
PInvoke.User32.MONITORINFO_Flags
PInvoke.User32.MONITORINFO_Flags.MONITORINFOF_PRIMARY = 1 -> PInvoke.User32.MONITORINFO_Flags
PInvoke.User32.MONITORINFO_Flags.None = 0 -> PInvoke.User32.MONITORINFO_Flags
PInvoke.User32.ProgressBarWindowStyles
PInvoke.User32.ProgressBarWindowStyles.PBS_MARQUEE = 8 -> PInvoke.User32.ProgressBarWindowStyles
PInvoke.User32.ProgressBarWindowStyles.PBS_SMOOTH = 1 -> PInvoke.User32.ProgressBarWindowStyles
PInvoke.User32.ProgressBarWindowStyles.PBS_SMOOTHREVERSE = 16 -> PInvoke.User32.ProgressBarWindowStyles
PInvoke.User32.ProgressBarWindowStyles.PBS_VERTICAL = 4 -> PInvoke.User32.ProgressBarWindowStyles
PInvoke.User32.ScrollBarWindowStyles
PInvoke.User32.ScrollBarWindowStyles.SBS_BOTTOMALIGN = 4 -> PInvoke.User32.ScrollBarWindowStyles
PInvoke.User32.ScrollBarWindowStyles.SBS_HORZ = 0 -> PInvoke.User32.ScrollBarWindowStyles
PInvoke.User32.ScrollBarWindowStyles.SBS_LEFTALIGN = 2 -> PInvoke.User32.ScrollBarWindowStyles
PInvoke.User32.ScrollBarWindowStyles.SBS_RIGHTALIGN = 4 -> PInvoke.User32.ScrollBarWindowStyles
PInvoke.User32.ScrollBarWindowStyles.SBS_SIZEBOX = 8 -> PInvoke.User32.ScrollBarWindowStyles
PInvoke.User32.ScrollBarWindowStyles.SBS_SIZEBOXBOTTOMRIGHTALIGN = 4 -> PInvoke.User32.ScrollBarWindowStyles
PInvoke.User32.ScrollBarWindowStyles.SBS_SIZEBOXTOPLEFTALIGN = 2 -> PInvoke.User32.ScrollBarWindowStyles
PInvoke.User32.ScrollBarWindowStyles.SBS_SIZEGRIP = 16 -> PInvoke.User32.ScrollBarWindowStyles
PInvoke.User32.ScrollBarWindowStyles.SBS_TOPALIGN = 2 -> PInvoke.User32.ScrollBarWindowStyles
PInvoke.User32.ScrollBarWindowStyles.SBS_VERT = 1 -> PInvoke.User32.ScrollBarWindowStyles
PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_BITMAP = PInvoke.User32.StaticControlWindowStyles.SS_RIGHT | PInvoke.User32.StaticControlWindowStyles.SS_LEFTNOWORDWRAP -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_BLACKFRAME = PInvoke.User32.StaticControlWindowStyles.SS_CENTER | PInvoke.User32.StaticControlWindowStyles.SS_WHITERECT -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_BLACKRECT = 4 -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_CENTER = 1 -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_CENTERIMAGE = 512 -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_EDITCONTROL = 8192 -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_ELLIPSISMASK = PInvoke.User32.StaticControlWindowStyles.SS_ENDELLIPSIS | PInvoke.User32.StaticControlWindowStyles.SS_PATHELLIPSIS -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_ENDELLIPSIS = 16384 -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_ENHMETAFILE = PInvoke.User32.StaticControlWindowStyles.SS_CENTER | PInvoke.User32.StaticControlWindowStyles.SS_BITMAP -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_ETCHEDFRAME = PInvoke.User32.StaticControlWindowStyles.SS_RIGHT | PInvoke.User32.StaticControlWindowStyles.SS_ETCHEDHORZ -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_ETCHEDHORZ = 16 -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_ETCHEDVERT = PInvoke.User32.StaticControlWindowStyles.SS_CENTER | PInvoke.User32.StaticControlWindowStyles.SS_ETCHEDHORZ -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_GRAYFRAME = 8 -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_GRAYRECT = PInvoke.User32.StaticControlWindowStyles.SS_CENTER | PInvoke.User32.StaticControlWindowStyles.SS_BLACKRECT -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_ICON = PInvoke.User32.StaticControlWindowStyles.SS_CENTER | PInvoke.User32.StaticControlWindowStyles.SS_RIGHT -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_LEFT = 0 -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_LEFTNOWORDWRAP = PInvoke.User32.StaticControlWindowStyles.SS_BLACKRECT | PInvoke.User32.StaticControlWindowStyles.SS_GRAYFRAME -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_NOPREFIX = 128 -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_NOTIFY = 256 -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_OWNERDRAW = PInvoke.User32.StaticControlWindowStyles.SS_CENTER | PInvoke.User32.StaticControlWindowStyles.SS_LEFTNOWORDWRAP -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_PATHELLIPSIS = 32768 -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_REALSIZECONTROL = 64 -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_REALSIZEIMAGE = 2048 -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_RIGHT = 2 -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_RIGHTJUST = 1024 -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_SIMPLE = PInvoke.User32.StaticControlWindowStyles.SS_CENTER | PInvoke.User32.StaticControlWindowStyles.SS_USERITEM -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_SUNKEN = 4096 -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_TYPEMASK = PInvoke.User32.StaticControlWindowStyles.SS_OWNERDRAW | PInvoke.User32.StaticControlWindowStyles.SS_ETCHEDFRAME -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_USERITEM = PInvoke.User32.StaticControlWindowStyles.SS_RIGHT | PInvoke.User32.StaticControlWindowStyles.SS_GRAYFRAME -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_WHITEFRAME = PInvoke.User32.StaticControlWindowStyles.SS_CENTER | PInvoke.User32.StaticControlWindowStyles.SS_GRAYFRAME -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_WHITERECT = PInvoke.User32.StaticControlWindowStyles.SS_RIGHT | PInvoke.User32.StaticControlWindowStyles.SS_BLACKRECT -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.StaticControlWindowStyles.SS_WORDELLIPSIS = PInvoke.User32.StaticControlWindowStyles.SS_ENDELLIPSIS | PInvoke.User32.StaticControlWindowStyles.SS_PATHELLIPSIS -> PInvoke.User32.StaticControlWindowStyles
PInvoke.User32.WindowStylesEx.WS_EX_NOREDIRECTIONBITMAP = 2097152 -> PInvoke.User32.WindowStylesEx
const PInvoke.User32.ENUM_CURRENT_SETTINGS = 4294967295 -> uint
const PInvoke.User32.ENUM_REGISTRY_SETTINGS = 4294967294 -> uint
const PInvoke.User32.ASFW_ANY = 4294967295 -> uint
static PInvoke.User32.ChangeWindowMessageFilterEx(System.IntPtr hwnd, uint message, uint action, System.IntPtr pChangeFilterStruct) -> bool
static PInvoke.User32.ChangeWindowMessageFilterEx(System.IntPtr hwnd, uint message, uint action, ref PInvoke.User32.CHANGEFILTERSTRUCT? pChangeFilterStruct) -> bool
static PInvoke.User32.CreateCursor(System.IntPtr hInst, int xHotspot, int yHotSpot, int nWidth, int nHeight, System.ReadOnlySpan<byte> pvANDPlane, System.ReadOnlySpan<byte> pvXORPlane) -> PInvoke.User32.SafeCursorHandle
static PInvoke.User32.DrawText(PInvoke.User32.SafeDCHandle hdc, System.Span<char> lpchText, ref PInvoke.RECT lprc, PInvoke.User32.TextFormats format) -> int
static PInvoke.User32.DrawTextEx(PInvoke.User32.SafeDCHandle hdc, System.Span<char> lpchText, ref PInvoke.RECT lprc, uint dwDTFormat, PInvoke.User32.DRAWTEXTPARAMS? lpDTParams) -> int
static PInvoke.User32.EnumDisplayDevices(System.IntPtr lpDevice, uint iDevNum, System.IntPtr lpDisplayDevice, PInvoke.User32.EnumDisplayDevicesFlags dwFlags) -> bool
static PInvoke.User32.EnumDisplayDevices(System.ReadOnlySpan<char> lpDevice, uint iDevNum, ref PInvoke.DISPLAY_DEVICE lpDisplayDevice, PInvoke.User32.EnumDisplayDevicesFlags dwFlags) -> bool
static PInvoke.User32.EnumDisplayDevices(char[] lpDevice, uint iDevNum, ref PInvoke.DISPLAY_DEVICE lpDisplayDevice, PInvoke.User32.EnumDisplayDevicesFlags dwFlags) -> bool
static PInvoke.User32.EnumDisplaySettings(System.IntPtr lpszDeviceName, uint iModeNum, System.IntPtr lpDevMode) -> bool
static PInvoke.User32.EnumDisplaySettings(System.ReadOnlySpan<char> lpszDeviceName, uint iModeNum, ref PInvoke.DEVMODE lpDevMode) -> bool
static PInvoke.User32.EnumDisplaySettings(char[] lpszDeviceName, uint iModeNum, ref PInvoke.DEVMODE lpDevMode) -> bool
static PInvoke.User32.EnumDisplaySettingsEx(System.IntPtr lpszDeviceName, uint iModeNum, System.IntPtr lpDevMode, PInvoke.User32.EnumDisplaySettingsExFlags dwFlags) -> bool
static PInvoke.User32.EnumDisplaySettingsEx(System.ReadOnlySpan<char> lpszDeviceName, uint iModeNum, ref PInvoke.DEVMODE lpDevMode, PInvoke.User32.EnumDisplaySettingsExFlags dwFlags) -> bool
static PInvoke.User32.EnumDisplaySettingsEx(char[] lpszDeviceName, uint iModeNum, ref PInvoke.DEVMODE lpDevMode, PInvoke.User32.EnumDisplaySettingsExFlags dwFlags) -> bool
static PInvoke.User32.GetClassName(System.IntPtr hWnd, System.Span<char> lpClassName) -> int
static PInvoke.User32.GetClipboardFormatName(int format, System.Span<char> lpszFormatName) -> int
static PInvoke.User32.GetIconInfo(PInvoke.User32.Cursors cursor, out PInvoke.User32.ICONINFO piconinfo) -> bool
static PInvoke.User32.GetIconInfo(PInvoke.User32.Cursors cursor, PInvoke.User32.ICONINFO* piconinfo) -> bool
static PInvoke.User32.GetIconInfo(PInvoke.User32.Cursors cursor, System.IntPtr piconinfo) -> bool
static PInvoke.User32.GetIconInfo(PInvoke.User32.Icons icon, out PInvoke.User32.ICONINFO piconinfo) -> bool
static PInvoke.User32.GetIconInfo(PInvoke.User32.Icons icon, PInvoke.User32.ICONINFO* piconinfo) -> bool
static PInvoke.User32.GetIconInfo(PInvoke.User32.Icons icon, System.IntPtr piconinfo) -> bool
static PInvoke.User32.GetIconInfo(System.IntPtr hIcon, System.IntPtr piconinfo) -> bool
static PInvoke.User32.GetIconInfo(System.IntPtr hIcon, out PInvoke.User32.ICONINFO piconinfo) -> bool
static PInvoke.User32.GetLastInputInfo(System.IntPtr plii) -> bool
static PInvoke.User32.GetLastInputInfo(out PInvoke.User32.LASTINPUTINFO plii) -> bool
static PInvoke.User32.GetMenuString(System.IntPtr hMenu, uint uIDItem, System.Span<char> lpString, PInvoke.User32.GetMenuStateFlags flags) -> int
static PInvoke.User32.GetMonitorInfo(System.IntPtr hMonitor, PInvoke.User32.MONITORINFOEX* lpmi) -> bool
static PInvoke.User32.GetMonitorInfo(System.IntPtr hMonitor, out PInvoke.User32.MONITORINFOEX lpmi) -> bool
static PInvoke.User32.GetWindowLongPtr(System.IntPtr hWnd, PInvoke.User32.WindowLongIndexFlags nIndex) -> void*
static PInvoke.User32.GetWindowLongPtr_IntPtr(System.IntPtr hWnd, PInvoke.User32.WindowLongIndexFlags nIndex) -> System.IntPtr
static PInvoke.User32.GetWindowText(System.IntPtr hWnd, System.Span<char> lpString) -> int
static PInvoke.User32.LASTINPUTINFO.Create() -> PInvoke.User32.LASTINPUTINFO
static PInvoke.User32.LoadCursor(System.IntPtr hInstance, System.ReadOnlySpan<char> lpCursorName) -> PInvoke.User32.SafeCursorHandle
static PInvoke.User32.LoadImage(System.IntPtr hInst, System.ReadOnlySpan<char> name, PInvoke.User32.ImageType type, int cx, int cy, PInvoke.User32.LoadImageFlags fuLoad) -> System.IntPtr
static PInvoke.User32.LoadString(System.IntPtr hInstance, uint uID, System.IntPtr lpBuffer, int cchBufferMax) -> int
static PInvoke.User32.LoadString(System.IntPtr hInstance, uint uID, System.Span<char> lpBuffer) -> int
static PInvoke.User32.LoadString(System.IntPtr hInstance, uint uID, char[] lpBuffer, int cchBufferMax) -> int
static PInvoke.User32.LookupIconIdFromDirectory(System.ReadOnlySpan<byte> presbits, bool fIcon) -> int
static PInvoke.User32.LookupIconIdFromDirectoryEx(System.ReadOnlySpan<byte> presbits, bool fIcon, int cxDesired, int cyDesired, PInvoke.User32.LookupIconIdFromDirectoryExFlags Flags) -> int
static PInvoke.User32.MONITORINFO.Create() -> PInvoke.User32.MONITORINFO
static PInvoke.User32.MsgWaitForMultipleObjectsEx(uint nCount, System.ReadOnlySpan<System.IntPtr> pHandles, uint dwMilliseconds, PInvoke.User32.WakeMask dwWakeMask, PInvoke.User32.MsgWaitForMultipleObjectsExFlags dwFlags) -> uint
static PInvoke.User32.QueryDisplayConfig(uint Flags, ref int pNumPathArrayElements, System.Span<PInvoke.User32.DISPLAYCONFIG_PATH_INFO> pPathInfoArray, ref int pNumModeInfoArrayElements, System.Span<PInvoke.User32.DISPLAYCONFIG_MODE_INFO> pModeInfoArray, PInvoke.User32.DISPLAYCONFIG_TOPOLOGY_ID pCurrentTopologyId) -> int
static PInvoke.User32.RealGetWindowClass(System.IntPtr hwnd, System.Span<char> pszType) -> uint
static PInvoke.User32.SendInput(int nInputs, System.ReadOnlySpan<PInvoke.User32.INPUT> pInputs, int cbSize) -> uint
static extern PInvoke.User32.AllowSetForegroundWindow(int dwProcessId) -> bool
static extern PInvoke.User32.BringWindowToTop(System.IntPtr hWnd) -> bool
static extern PInvoke.User32.ChangeWindowMessageFilterEx(System.IntPtr hwnd, uint message, uint action, PInvoke.User32.CHANGEFILTERSTRUCT* pChangeFilterStruct) -> bool
static extern PInvoke.User32.DestroyIcon(System.IntPtr hIcon) -> int
static extern PInvoke.User32.GetIconInfo(System.IntPtr hIcon, PInvoke.User32.ICONINFO* piconinfo) -> bool
static extern PInvoke.User32.EnumChildWindows(System.IntPtr hWndParent, System.IntPtr lpEnumFunc, System.IntPtr lParam) -> bool
static extern PInvoke.User32.EnumDisplayDevices(char* lpDevice, uint iDevNum, PInvoke.DISPLAY_DEVICE* lpDisplayDevice, PInvoke.User32.EnumDisplayDevicesFlags dwFlags) -> bool
static extern PInvoke.User32.EnumDisplaySettings(char* lpszDeviceName, uint iModeNum, PInvoke.DEVMODE* lpDevMode) -> bool
static extern PInvoke.User32.EnumDisplaySettingsEx(char* lpszDeviceName, uint iModeNum, PInvoke.DEVMODE* lpDevMode, PInvoke.User32.EnumDisplaySettingsExFlags dwFlags) -> bool
static extern PInvoke.User32.EnumThreadWindows(int dwThreadId, PInvoke.User32.WNDENUMPROC lpfn, System.IntPtr lParam) -> bool
static extern PInvoke.User32.FlashWindow(System.IntPtr hWnd, bool bInvert) -> bool
static extern PInvoke.User32.GetLastInputInfo(PInvoke.User32.LASTINPUTINFO* plii) -> bool
static extern PInvoke.User32.GetParent(System.IntPtr hWnd) -> System.IntPtr
static extern PInvoke.User32.GetProp(System.IntPtr hWnd, int atom) -> System.IntPtr
static extern PInvoke.User32.GetProp(System.IntPtr hWnd, string lpString) -> System.IntPtr
static extern PInvoke.User32.LoadString(System.IntPtr hInstance, uint uID, char* lpBuffer, int cchBufferMax) -> int
static extern PInvoke.User32.RemoveProp(System.IntPtr hWnd, int atom) -> System.IntPtr
static extern PInvoke.User32.RemoveProp(System.IntPtr hWnd, string lpString) -> System.IntPtr
static extern PInvoke.User32.SetProp(System.IntPtr hWnd, int atom, System.IntPtr hData) -> bool
static extern PInvoke.User32.SetProp(System.IntPtr hWnd, string lpString, System.IntPtr hData) -> bool
static extern PInvoke.User32.ShowWindowAsync(System.IntPtr hWnd, PInvoke.User32.WindowShowStyle nCmdShow) -> bool
static extern PInvoke.User32.UnregisterClass(string lpClassName, System.IntPtr hInstance) -> bool
static readonly PInvoke.User32.DPI_AWARENESS_CONTEXT_UNAWARE_GDISCALED -> System.IntPtr
PInvoke.User32.Icons
PInvoke.User32.Icons.IDI_APPLICATION = 32512 -> PInvoke.User32.Icons
PInvoke.User32.Icons.IDI_ASTERISK = 32516 -> PInvoke.User32.Icons
PInvoke.User32.Icons.IDI_ERROR = 32513 -> PInvoke.User32.Icons
PInvoke.User32.Icons.IDI_EXCLAMATION = 32515 -> PInvoke.User32.Icons
PInvoke.User32.Icons.IDI_HAND = 32513 -> PInvoke.User32.Icons
PInvoke.User32.Icons.IDI_INFORMATION = 32516 -> PInvoke.User32.Icons
PInvoke.User32.Icons.IDI_QUESTION = 32514 -> PInvoke.User32.Icons
PInvoke.User32.Icons.IDI_SHIELD = 32518 -> PInvoke.User32.Icons
PInvoke.User32.Icons.IDI_WARNING = 32515 -> PInvoke.User32.Icons
PInvoke.User32.Icons.IDI_WINLOGO = 32517 -> PInvoke.User32.Icons